"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[6037],{31316:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>j,contentTitle:()=>u,default:()=>p,frontMatter:()=>h,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"mutation/save-command/association/classification","title":"Association classification","description":"Basic Concepts","source":"@site/docs/mutation/save-command/association/classification.mdx","sourceDirName":"mutation/save-command/association","slug":"/mutation/save-command/association/classification","permalink":"/jimmer-doc/docs/mutation/save-command/association/classification","draft":false,"unlisted":false,"editUrl":"https://github.com/babyfish-ct/jimmer-doc/edit/main/docs/mutation/save-command/association/classification.mdx","tags":[],"version":"current","lastUpdatedAt":1732491635000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Association classification"},"sidebar":"tutorialSidebar","previous":{"title":"Associations","permalink":"/jimmer-doc/docs/mutation/save-command/association/"},"next":{"title":"Owner side","permalink":"/jimmer-doc/docs/mutation/save-command/association/owner"}}');var t=s(74848),a=s(28453),o=s(11470),r=s(19365),l=s(64087),c=s(46845),d=s(74400);const h={sidebar_position:1,title:"Association classification"},u=void 0,j={},m=[{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"1. Classification by Association Object Shape",id:"1-classification-by-association-object-shape",level:2},{value:"1.1. Short Association",id:"11-short-association",level:3},{value:"1.1.1. Using Id-Only Objects as Associated Objects",id:"111-using-id-only-objects-as-associated-objects",level:4},{value:"1.1.2. Using Key-Only Objects as Associated Objects with Special Configuration Enabled",id:"112-using-key-only-objects-as-associated-objects-with-special-configuration-enabled",level:4},{value:"1.2. Long Association",id:"12-long-association",level:3},{value:"2. Classification by Save Order",id:"2-classification-by-save-order",level:2},{value:"2.1. Forward Association",id:"21-forward-association",level:3},{value:"2.2. Backward Association",id:"22-backward-association",level:3}];function x(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"basic-concepts",children:"Basic Concepts"}),"\n",(0,t.jsx)(n.p,{children:"Association objects can be classified from two perspectives, with two types of associations from each perspective, totaling 4 types"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Classification by association object shape"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Short Association"})}),"\n",(0,t.jsx)(n.p,{children:"Only modifies the association relationship between the current object and other objects, without further saving the associated objects."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The recursive saving behavior is terminated and will not continue deeper."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Long Association"})}),"\n",(0,t.jsx)(n.p,{children:"Not only modifies the association relationship between the current object and other objects but also further saves the associated objects."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The recursive saving behavior will not be terminated and will continue deeper."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Classification by save order"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Forward Association"})}),"\n",(0,t.jsxs)(n.p,{children:["Associated objects are saved earlier than the current object, which is actually based on foreign keys ",(0,t.jsx)(n.em,{children:"(whether true or false)"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["For example: ",(0,t.jsx)(n.code,{children:"Book.store"})," in this tutorial."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Backward Association"})}),"\n",(0,t.jsx)(n.p,{children:"Associated objects are saved later than the current object, including two situations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The inverse association of forward associations."}),"\n",(0,t.jsxs)(n.p,{children:["For example: ",(0,t.jsx)(n.code,{children:"BookStore.books"})," in this tutorial"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Associations based on intermediate tables."}),"\n",(0,t.jsxs)(n.p,{children:["For example: ",(0,t.jsx)(n.code,{children:"Book.authors"})," and ",(0,t.jsx)(n.code,{children:"Author.books"})," in this tutorial"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"1-classification-by-association-object-shape",children:"1. Classification by Association Object Shape"}),"\n",(0,t.jsx)(n.h3,{id:"11-short-association",children:"1.1. Short Association"}),"\n",(0,t.jsx)(n.p,{children:"A short association means only modifying the association itself between the current object and other objects, with no interest in modifying the associated objects."}),"\n",(0,t.jsxs)(n.p,{children:["Typically, UI design will use radio buttons ",(0,t.jsx)(n.em,{children:"(association reference)"})," or checkboxes ",(0,t.jsx)(n.em,{children:"(association collection)"}),"."]}),"\n",(0,t.jsx)(l.M,{}),"\n",(0,t.jsx)("div",{children:"\xa0"}),"\n",(0,t.jsx)(n.p,{children:"Where:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Radio buttons correspond to many-to-one association ",(0,t.jsx)(n.code,{children:"Book.store"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Checkboxes correspond to many-to-many association ",(0,t.jsx)(n.code,{children:"Book.authors"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"In real projects, when there is a lot of data to choose from, it might not be suitable to design as a dropdown UI. In this case, an object selector with filtering conditions and pagination capabilities can be used instead of a dropdown, which is a common workaround."})}),"\n",(0,t.jsxs)(n.p,{children:["Since users only want to modify the association between the current object and other objects, without further modifying the associated objects, the UI cannot have multiple levels of association nesting. This is why it's called a ",(0,t.jsx)(n.strong,{children:"short association"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"When passing any shaped data structure as a parameter to the save command, there are two methods to specify short associations:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use Id-Only objects as associated objects"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use Key-Only objects as associated objects with special configuration enabled"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"111-using-id-only-objects-as-associated-objects",children:"1.1.1. Using Id-Only Objects as Associated Objects"}),"\n",(0,t.jsx)(n.p,{children:"Make associated objects have only the id property"}),"\n",(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Book book = Immutables.createBook(draft -> {\n    draft.setName("SQL in Action");\n    draft.setEdition(1);\n    draft.setPrice(new BigDecimal("39.9"));\n    \n    // Associated object has only id property\n    // highlight-next-line\n    draft.setStoreId(2L);\n\n    draft.addIntoAuthors(author -> {\n        // Associated object has only id property\n        // highlight-next-line\n        author.setId(4L);\n    });\n    draft.addIntoAuthors(author -> {\n        // Associated object has only id property\n        // highlight-next-line\n        author.setId(5L);\n    });\n});\nsqlClient.save(book);\n'})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'val book = Book {\n    name = "SQL in Action"\n    edition = 1\n    price = BigDecimal("39.9")\n\n    // Associated object has only id property\n    // highlight-next-line\n    storeId = 2L\n\n    authors().addBy {\n        // Associated object has only id property\n        // highlight-next-line\n        id = 4L\n    }\n    authors().addBy {\n        // Associated object has only id property\n        // highlight-next-line\n        id = 5L\n    }\n}\nsqlClient.save(book)\n'})})})]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"The hardcoding of the data structure being saved here is only for demonstration. In actual projects, the data structure being saved is submitted by the frontend interface."}),(0,t.jsxs)(n.p,{children:["Of course, if the user has defined the ",(0,t.jsx)(n.code,{children:"authorIds"})," property according to the ",(0,t.jsx)(n.a,{href:"../../../mapping/advanced/view/id-view",children:"Mapping/Advanced Mapping/View Properties/IdView"})," article, the above code can be simplified, for example:"]}),(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"Book book = ImmutableObjects.createBook(draft -> {\n    draft.setAuthorIds(Arrays.asList(4L, 5L));\n});\n"})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val book = Book {\n    authorIds = listOf(4L, 5L)\n}\n"})})})]}),(0,t.jsxs)(n.p,{children:["However, this is not mandatory. To make the example more universal, we don't assume that users have defined ",(0,t.jsx)(n.a,{href:"../../../mapping/advanced/view/id-view",children:"IdView"})," properties for entity types. All subsequent documentation will follow this approach without further reminders."]})]}),"\n",(0,t.jsx)(n.p,{children:"Assuming the current database is H2, the generated SQL would be:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Save the aggregate root."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"merge into BOOK(\n    NAME, EDITION, PRICE, STORE_ID\n) key(\n    NAME, EDITION\n) values(?, ?, ?, ?)\n/* batch-0: [SQL in Action, 1, 39.9, 2] */\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Since ",(0,t.jsx)(n.code,{children:"Book.store"})," is a many-to-one relationship directly based on foreign key ",(0,t.jsx)(n.em,{children:"(STORE_ID)"}),", the association between the current object and ",(0,t.jsx)(n.code,{children:"BookStore(2)"})," object will be automatically created by the execution of this SQL."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If there are ",(0,t.jsx)(n.code,{children:"Author"})," objects associated with the current object ",(0,t.jsxs)(n.em,{children:["(newly inserted data is ",(0,t.jsx)(n.code,{children:"Book(100)"}),")"]})," other than just ",(0,t.jsx)(n.code,{children:"Author(4)"})," and ",(0,t.jsx)(n.code,{children:"Author(5)"}),", break the associations with those other objects."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"delete from BOOK_AUTHOR_MAPPING\nwhere \n    BOOK_ID = ? /* 100 */\nand\n    not (\n        AUTHOR_ID = any(? /* [4, 5] */)\n    )\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"This step is called unhooking, which will be introduced in subsequent documentation. Readers can ignore this for now."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Establish associations between the object ",(0,t.jsxs)(n.em,{children:["(newly inserted data is ",(0,t.jsx)(n.code,{children:"Book(100)"}),")"]})," and the two objects ",(0,t.jsx)(n.code,{children:"Author(4)"})," and ",(0,t.jsx)(n.code,{children:"Author(5)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"merge into BOOK_AUTHOR_MAPPING tb_1_ \nusing(values(?, ?)) tb_2_(\n    BOOK_ID, AUTHOR_ID\n) \non \n    tb_1_.BOOK_ID = tb_2_.BOOK_ID\nand\n    tb_1_.AUTHOR_ID = tb_2_.AUTHOR_ID \nwhen not matched then insert(BOOK_ID, AUTHOR_ID)\nvalues(tb_2_.BOOK_ID, tb_2_.AUTHOR_ID)\n/* batch-0: [100, 4] */\n/* batch-1: [100, 5] */\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Through this example, it's not hard to see that short associations only create or destroy the association relationships between the current object and other objects, without further saving the associated objects."}),(0,t.jsxs)(n.p,{children:["Short associations always assume that the referenced objects exist. If the referenced objects ",(0,t.jsxs)(n.em,{children:["(in this example, ",(0,t.jsx)(n.code,{children:"BookStore(2)"}),", ",(0,t.jsx)(n.code,{children:"Author(4)"}),", and ",(0,t.jsx)(n.code,{children:"Author(5)"}),")"]})," don't exist, it will cause an exception!"]})]}),"\n",(0,t.jsx)(n.h4,{id:"112-using-key-only-objects-as-associated-objects-with-special-configuration-enabled",children:"1.1.2. Using Key-Only Objects as Associated Objects with Special Configuration Enabled"}),"\n",(0,t.jsx)(n.p,{children:"In the code below, assume:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The key property for the ",(0,t.jsx)(n.code,{children:"BookStore"})," type is ",(0,t.jsx)(n.code,{children:"name"})]}),"\n",(0,t.jsx)(d.l,{buttonText:"View",title:"BookStore Key Definition",children:(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:'title="BookStore.java"',children:"@Entity\npublic interface BookStore {\n\n    // highlight-next-line\n    @Key\n    String name();\n\n    ...other members omitted...\n}\n"})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",metastring:'title="BookStore.kt"',children:"@Entity\ninterface BookStore {\n\n    // highlight-next-line\n    @Key\n    val name: String\n\n    ...other members omitted...\n}\n"})})})]})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The key properties for the ",(0,t.jsx)(n.code,{children:"Author"})," type are ",(0,t.jsx)(n.code,{children:"firstName"})," and ",(0,t.jsx)(n.code,{children:"lastName"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"In actual business scenarios, this uniqueness constraint might not be reasonable, but let's assume this for the sake of simplifying the example."}),"\n"]}),"\n",(0,t.jsx)(d.l,{buttonText:"View",title:"Author Key Definition",children:(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:'title="Author.java"',children:"@Entity\npublic interface Author {\n\n    // highlight-next-line\n    @Key\n    String firstName();\n\n    // highlight-next-line\n    @Key\n    String lastName();\n\n    ...other members omitted...\n}\n"})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",metastring:'title="Author.kt"',children:"@Entity\ninterface Author {\n\n    // highlight-next-line\n    @Key\n    val firstName: String\n\n    // highlight-next-line\n    @Key\n    val lastName: String\n\n    ...other members omitted...\n}\n"})})})]})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Book book = Immutables.createBook(draft -> {\n    draft.setName("SQL in Action");\n    draft.setEdition(1);\n    draft.setPrice(new BigDecimal("39.9"));\n    draft.applyStore(store -> {\n        // Associated object has only key property, i.e., `BookStore.name`\n        // highlight-next-line\n        store.setName("MANNING");\n    });\n    draft.addIntoAuthors(author -> {\n        // Associated object has only key properties, i.e., `Author.firstName` and `Author.lastName`\n        // highlight-next-line\n        author.setFirstName("Boris").setLastName("Cherny");\n    });\n    draft.addIntoAuthors(author -> {\n        // Associated object has only key properties, i.e., `Author.firstName` and `Author.lastName`\n        // highlight-next-line\n        author.setFirstName("Samer").setLastName("Buna");\n    });\n});\nsqlClient\n    .saveCommand(book)\n    // highlight-next-line\n    .setKeyOnlyAsReference(BookProps.STORE)\n    // highlight-next-line\n    .setKeyOnlyAsReference(BookProps.AUTHORS)\n    .execute();\n'})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'val book = Book {\n    name = "SQL in Action"\n    edition = 1\n    price = BigDecimal("39.9")\n    store {\n        // Associated object has only key property, i.e., `BookStore.name`\n        // highlight-next-line\n        name = "MANNING"\n    }\n    authors().addBy {\n        // Associated object has only key properties, i.e., `Author.firstName` and `Author.lastName`\n        // highlight-next-line\n        firstName = "Boris"\n        // highlight-next-line\n        lastName = "Cherny"\n    }\n    authors().addBy {\n        // Associated object has only key properties, i.e., `Author.firstName` and `Author.lastName`\n        // highlight-next-line\n        firstName = "Samer"\n        // highlight-next-line\n        lastName = "Buna"\n    }\n}\nsqlClient.save(book) {\n    // highlight-next-line\n    setKeyOnlyAsReference(Book::store)\n    // highlight-next-line\n    setKeyOnlyAsReference(Book::authors)\n}\n'})})})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"By default, key-only associated objects are treated as long associations"})}),(0,t.jsxs)(n.p,{children:["However, developers can treat key-only associated objects as short associations by calling the ",(0,t.jsx)(n.code,{children:"setKeyOnlyAsReference"})," method."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Here, ",(0,t.jsx)(n.code,{children:"setKeyOnlyAsReference"})," is called twice to explicitly configure the associations ",(0,t.jsx)(n.code,{children:"Book.store"})," and ",(0,t.jsx)(n.code,{children:"Book.authors"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["In fact, you can also call ",(0,t.jsx)(n.code,{children:"setKeyOnlyAsReferenceAll"})," once to blindly configure all associations."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Compared to Kotlin, the Java API is slightly less convenient for advanced configuration of save commands."}),"\n",(0,t.jsxs)(n.p,{children:["First call the ",(0,t.jsx)(n.code,{children:"saveCommand"})," method to create a save command without executing it immediately, then call the ",(0,t.jsx)(n.code,{children:"execute"})," method to actually execute it after completing the advanced configuration."]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h3,{id:"12-long-association",children:"1.2. Long Association"}),"\n",(0,t.jsx)(n.p,{children:"A long association means not only modifying the association itself between the current object and other objects but also further modifying the associated objects."}),"\n",(0,t.jsx)(n.p,{children:"Typically, orders and order items are the best examples of such scenarios. The UI design will use embedded tables, for example:"}),"\n",(0,t.jsx)(c.Y,{}),"\n",(0,t.jsx)("div",{children:"\xa0"}),"\n",(0,t.jsxs)(n.p,{children:["Since users not only want to modify the association between the current object and other objects but also want to further modify the associated objects, and the associated objects can contain deeper associations, theoretically, the UI can have multiple levels of association nesting. This is why it's called a ",(0,t.jsx)(n.strong,{children:"long association"}),"."]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"Although designers will intentionally avoid nesting deeper embedded tables within embedded tables to maintain UI simplicity, there are still scenarios in real projects where maintaining multi-level nested associations in the UI is necessary, such as:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The form itself is a tree structure, which is saved as a whole after editing."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Visual UI design, because UI components themselves are tree structures, after users perform a series of visual drag-and-drop designs, the UI component tree is saved as a whole."}),"\n"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["Jimmer can directly save long association data structures of any shape. If we call a long association data structure with unknown depth a complex form, ",(0,t.jsx)(n.strong,{children:"the save command is designed for complex forms."})]})]}),"\n",(0,t.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Order order = Immutables.createOrder(draft -> {\n    draft.setCustomerId(1L);\n    draft.setProvince("Prenzlauer Berg");\n    draft.setCity("Berlin");\n    draft.setAddress("Brandenburgische Stra\xdfe 9, Prenzlauer Berg, Berlin, Germany");\n    draft.addIntoItems(item -> {\n        item.setProductId(8L);\n        // Property neither id nor key  \n        // highlight-next-line\n        item.setQuantity(2);\n    });\n    draft.addIntoItems(item -> {\n        item.setProductId(9L);\n        // Property neither id nor key\n        // highlight-next-line\n        item.setQuantity(1);\n    });\n});\nsqlClient.save(order);\n'})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'val order = Order {\n    customerId = 1L\n    province = "Prenzlauer Berg"\n    city = "Berlin" \n    address = "Brandenburgische Stra\xdfe 9, Prenzlauer Berg, Berlin, Germany"\n    items().addBy {\n        productId = 8L\n        // Property neither id nor key\n        // highlight-next-line\n        quantity = 2\n    }\n    items().addBy {\n        productId = 9L\n        // Property neither id nor key\n        // highlight-next-line\n        quantity = 1\n    }\n}\nsqlClient.save(order)\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["In this example, we can see many short associations, such as ",(0,t.jsx)(n.code,{children:"Order.customer"}),", ",(0,t.jsx)(n.code,{children:"OrderItem.product"}),", but these are not the focus here."]}),"\n",(0,t.jsxs)(n.p,{children:["Here, we should focus on the association ",(0,t.jsx)(n.code,{children:"Order.items"}),", which is clearly a long association."]}),"\n",(0,t.jsx)(n.p,{children:"This operation generates two SQL statements:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Insert the root object ",(0,t.jsx)(n.code,{children:"Order"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"insert into order_(\n    PROVINCE, CITY, ADDRESS, CUSTOMER_ID\n) values(?, ?, ?, ?)\n/*batch-0: [Prenzlauer Berg, Berlin, Brandenburgische Stra\xdfe 9, Prenzlauer Berg, Berlin, Germany, 1] */\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Insert all child objects ",(0,t.jsx)(n.code,{children:"OrderItem"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"insert into ORDER_ITEM(\n    ORDER_ID, \n    PRODUCT_ID, \n    QUANTITY\n) values(?, ?, ?)\n/* batch-0: [100, 8, 2] */\n/* batch-1: [100, 9, 1] */\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"As we can see, long associations not only modify the association relationship between the current object and other objects but also cause the associated objects to be saved."}),(0,t.jsx)(n.p,{children:"If the associated objects also have long associations, they will be saved recursively until there are no more association properties or until a short association is encountered."})]}),"\n",(0,t.jsx)(n.h2,{id:"2-classification-by-save-order",children:"2. Classification by Save Order"}),"\n",(0,t.jsx)(n.h3,{id:"21-forward-association",children:"2.1. Forward Association"}),"\n",(0,t.jsxs)(n.p,{children:["Forward association is based on foreign keys ",(0,t.jsx)(n.em,{children:"(whether true or false)"}),". Its working mode is to save the associated objects first, then save the root object."]}),"\n",(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Book book = Immutables.createBook(draft -> {\n    draft.setName("SQL in Action");\n    draft.setEdition(1);\n    draft.setPrice(new BigDecimal("49.9"));\n    draft.applyStore(store -> {\n        store.setName("TURING");\n        store.setWebsite("https://www.turing.com");\n    });\n});\nsqlClient.save(book);\n'})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'val book = Book {\n    name = "SQL in Action"\n    edition = 1\n    price = BigDecimal("49.9")\n    store {\n        name = "TURING"\n        website = "https://www.turing.com"\n    }\n}\nsqlClient.save(book)\n'})})})]}),"\n",(0,t.jsx)(n.p,{children:"Taking H2 as an example, it generates two SQL statements:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["First save the associated object ",(0,t.jsx)(n.code,{children:"BookStore"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"merge into BOOK_STORE(\n    NAME, WEBSITE\n) key(NAME) values(?, ?)\n/* batch-0: [TURING, https://www.turing.com] */\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Then save the current object ",(0,t.jsx)(n.code,{children:"Book"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"merge into BOOK(\n    NAME, EDITION, PRICE, STORE_ID\n) key(\n    NAME, EDITION\n) values(?, ?, ?, ?)\n/* batch-0: [SQL in Action, 1, 49.9, 100] */\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsx)(n.p,{children:'When discussing forward associations in work communication, it\'s recommended to use expressions like "current object/associated object" rather than "parent object/child object".'}),(0,t.jsx)(n.p,{children:"This is because, for forward associations, the parent-child relationship at the ORM level is completely opposite to that at the database modeling level, which can easily cause confusion and misunderstanding."})]}),"\n",(0,t.jsx)(n.h3,{id:"22-backward-association",children:"2.2. Backward Association"}),"\n",(0,t.jsx)(n.p,{children:"Other associations, such as:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Inverse associations of forward associations ",(0,t.jsxs)(n.em,{children:["(like ",(0,t.jsx)(n.code,{children:"BookStore.books"})," in this tutorial)"]})]}),"\n",(0,t.jsxs)(n.li,{children:["Associations based on intermediate tables ",(0,t.jsxs)(n.em,{children:["(like ",(0,t.jsx)(n.code,{children:"Book.authors"})," and ",(0,t.jsx)(n.code,{children:"Author.books"})," in this tutorial)"]})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"can all be categorized as backward associations, which are more common scenarios."}),"\n",(0,t.jsx)(n.p,{children:"The working mode of backward associations is easier to understand: save the current object first, then save the associated objects."}),"\n",(0,t.jsxs)(o.A,{groupId:"language",children:[(0,t.jsx)(r.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'BookStore store = Immutables.createBookStore(draft -> {\n    draft.setName("TURING");\n    draft.setWebsite("https://www.turing.com");\n    draft.addIntoBooks(book -> {\n        book.setName("SQL in Action");\n        book.setEdition(1);\n        book.setPrice(new BigDecimal("49.9"));\n    });\n    draft.addIntoBooks(book -> {\n        book.setName("RUST programming");\n        book.setEdition(2);\n        book.setPrice(new BigDecimal("39.9"));\n    });\n});\nsqlClient\n    .saveCommand(store)\n    // Please ignore this configuration for now\n    .setTargetTransferModeAll(TargetTransferMode.ALLOWED)\n    .execute();\n'})})}),(0,t.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'val store = BookStore {\n    name = "TURING"\n    website = "https://www.turing.com"\n    books().addBy {\n        name = "SQL in Action"\n        edition = 1\n        price = BigDecimal("49.9")\n    }\n    books().addBy {\n        name = "RUST programming"\n        edition = 2\n        price = BigDecimal("39.9")\n    }\n}\nsqlClient.save(store) {\n    // Please ignore this configuration for now\n    setTargetTransferModeAll(TargetTransferMode.ALLOWED)\n}\n'})})})]}),"\n",(0,t.jsx)(n.p,{children:"Taking H2 as an example, it generates three SQL statements:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["First save the current object ",(0,t.jsx)(n.code,{children:"BookStore"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"merge into BOOK_STORE(\n    NAME, WEBSITE\n) key(\n    NAME\n) values(?, ?)\n/* batch-0: [TURING, https://www.turing.com] */\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Then save the associated objects ",(0,t.jsx)(n.code,{children:"Book"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"merge into BOOK(\n    NAME, EDITION, PRICE, STORE_ID\n) key(\n    NAME, EDITION\n) values(?, ?, ?, ?)\n/* batch-0: [SQL in Action, 1, 49.9, 100] */\n/* batch-1: [RUST programming, 2, 39.9, 100] */\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The third SQL statement is not relevant to the topic being discussed here, so it's omitted"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Backward associations have richer functionality than forward associations. This tutorial will focus on discussing backward associations."})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},46845:(e,n,s)=>{s.d(n,{Y:()=>O});var i=s(96540),t=s(67733),a=s(67512),o=s(43581),r=s(80421),l=s(1489),c=s(71543),d=s(57416),h=s(53881),u=s(88933),j=s(46780),m=s(19591),x=s(618),p=s(73231),g=s(30854),b=s(16718),y=s(4671),f=s(67034),A=s(63051),v=s(15993),k=s(28968),w=s(13407),I=s(46831),B=s(44586),N=s(82470),S=s(16712),C=s(74848);const O=(0,i.memo)((()=>{const{i18n:e}=(0,B.A)(),n=(0,S.o)(),s=(0,i.useMemo)((()=>n?T:_),[n]),O=(0,i.useMemo)((()=>{const e=new Map;for(const n of s)e.set(n.id,n);return e}),[s]),R=(0,i.useMemo)((()=>n?L:E),[n]),D=(0,i.useMemo)((()=>{const e=new Map;for(const n of R)e.set(n.id,n);return e}),[R]),[M,q]=(0,N.e)((()=>({userId:1,province:O.get(1).province,city:O.get(1).city,address:O.get(1).address,items:[{__rowId:1,productId:1,name:D.get(1).name,quantity:2},{__rowId:2,productId:10,name:D.get(10).name,quantity:1}]}))),U=(0,i.useMemo)((()=>Math.max(...M.items.map((e=>e.__rowId)))+1),[M]),K=(0,i.useCallback)((e=>{const n=O.get(parseInt(e.target.value));void 0!==n&&q((e=>{e.userId=n.id,e.province=n.province,e.city=n.city,e.address=n.address}))}),[q,O]),z=(0,i.useCallback)((e=>{q((n=>{n.province=e.target.value}))}),[q]),Q=(0,i.useCallback)((e=>{q((n=>{n.city=e.target.value}))}),[q]),F=(0,i.useCallback)((e=>{q((n=>{n.address=e.target.value}))}),[q]),W=(0,i.useCallback)(((e,n)=>{q((s=>{for(const i of s.items)if(i.__rowId===n){i.productId=parseInt(e.target.value),P(s);break}}))}),[q]),G=(0,i.useCallback)(((e,n)=>{q((s=>{for(const i of s.items)if(i.__rowId===n){i.quantity=parseInt(e.target.value),P(s);break}}))}),[q]),H=(0,i.useCallback)((e=>{q((n=>{for(let s=n.items.length-1;s>=0;--s)if(n.items[s].__rowId===e){n.items.splice(s,1);break}}))}),[q]),J=(0,i.useCallback)((()=>{q((e=>{e.items.push({__rowId:U,quantity:1})}))}),[q,U]),[V,Y]=(0,i.useState)(!1),X=(0,i.useCallback)((()=>{Y(!0)}),[]),Z=(0,i.useCallback)((()=>{Y(!1)}),[]);return(0,C.jsxs)(d.A,{elevation:3,style:{padding:"1.5rem"},children:[(0,C.jsx)(t.A,{component:"form",noValidate:!0,autoComplete:"off",children:(0,C.jsxs)(l.Ay,{container:!0,spacing:2,children:[(0,C.jsx)(l.Ay,{item:!0,xs:4,children:(0,C.jsx)(o.A,{fullWidth:!0,select:!0,label:n?"\u8d2d\u4e70\u4eba":"Purchaser",value:M.userId,onChange:K,children:s.map((e=>(0,C.jsx)(r.A,{value:e.id,children:e.nickName},e.id)))})}),(0,C.jsx)(l.Ay,{item:!0,xs:4,children:(0,C.jsx)(o.A,{fullWidth:!0,label:n?"\u7701\u4efd":"Province",value:M.province,onChange:z})}),(0,C.jsx)(l.Ay,{item:!0,xs:4,children:(0,C.jsx)(o.A,{fullWidth:!0,label:n?"\u57ce\u5e02":"City",value:M.city,onChange:Q})}),(0,C.jsx)(l.Ay,{item:!0,xs:12,children:(0,C.jsx)(o.A,{fullWidth:!0,label:n?"\u5730\u5740":"Address",value:M.address,onChange:F})}),(0,C.jsxs)(l.Ay,{item:!0,xs:12,children:[(0,C.jsx)(c.A,{textAlign:"left",children:n?"\u8ba2\u5355\u660e\u7ec6":"Order Items"}),(0,C.jsx)(m.A,{component:d.A,children:(0,C.jsxs)(h.A,{size:"small",children:[(0,C.jsx)(x.A,{children:(0,C.jsxs)(p.A,{children:[(0,C.jsx)(j.A,{children:n?"\u5546\u54c1":"Commodity"}),(0,C.jsx)(j.A,{children:n?"\u6570\u91cf":"Quantity"}),(0,C.jsx)(j.A,{children:n?"\u5355\u4ef7":"Unit price"}),(0,C.jsx)(j.A,{children:n?"\u660e\u7ec6\u4ef7":"Item price"}),(0,C.jsx)(j.A,{children:n?"\u5220\u9664":"Delete"})]})}),(0,C.jsx)(u.A,{children:M.items.map((e=>{const n=void 0!==e.productId?D.get(e.productId):void 0;return(0,C.jsxs)(p.A,{children:[(0,C.jsx)(j.A,{children:(0,C.jsx)(o.A,{select:!0,value:n?.id,variant:"standard",size:"small",onChange:n=>{W(n,e.__rowId)},children:R.map((e=>(0,C.jsx)(r.A,{value:e.id,children:e.name},e.id)))})}),(0,C.jsx)(j.A,{children:(0,C.jsx)(o.A,{type:"number",value:e.quantity,variant:"standard",size:"small",onChange:n=>{G(n,e.__rowId)}})}),(0,C.jsx)(j.A,{children:n?.price}),(0,C.jsx)(j.A,{children:void 0!==n&&n.price*e.quantity}),(0,C.jsx)(j.A,{children:(0,C.jsx)(y.A,{onClick:()=>H(e.__rowId),children:(0,C.jsx)(f.A,{})})})]},e.__rowId)}))}),(0,C.jsx)(g.A,{children:(0,C.jsx)(p.A,{children:(0,C.jsx)(j.A,{colSpan:5,children:(0,C.jsxs)(a.A,{onClick:J,children:[(0,C.jsx)(b.A,{}),n?"\u6dfb\u52a0":"Add"]})})})})]})})]}),(0,C.jsxs)(l.Ay,{item:!0,xs:12,children:[n?"\u603b\u989d":"Total price",":",M.items.filter((e=>void 0!==e.productId&&"number"==typeof e.quantity)).map((e=>D.get(e.productId).price*e.quantity)).reduce(((e,n)=>e+n),0)]}),(0,C.jsx)(l.Ay,{item:!0,xs:12,children:(0,C.jsx)(a.A,{variant:"contained",onClick:X,children:n?"\u63d0\u4ea4":"Submit"})})]})}),(0,C.jsxs)(A.A,{open:V,onClose:Z,children:[(0,C.jsx)(I.A,{children:n?"\u4fe1\u606f":"Info"}),(0,C.jsx)(k.A,{children:(0,C.jsx)(w.A,{children:n?"\u4ec5\u4f5c\u793a\u8303\uff0c\u65e0\u4efb\u4f55\u6548\u679c":"For demonstration only, without any effect"})}),(0,C.jsx)(v.A,{children:(0,C.jsx)(a.A,{onClick:Z,children:n?"\u5173\u95ed":"Close"})})]})]})})),T=[{id:1,nickName:"\u76ae\u76ae\u9c81",province:"\u56db\u5ddd",city:"\u6210\u90fd",address:"\u9f99\u6cc9\u9a7f\u533a\u6d2a\u7389\u8def\u4e0e\u5341\u6d2a\u8def\u4ea4\u53c9\u53e3"},{id:2,nickName:"\u9c81\u897f\u897f",province:"\u5e7f\u4e1c",city:"\u5e7f\u5dde",address:"\u767d\u4e91\u533a\u77f3\u6c99\u8def300\u53f7"},{id:3,nickName:"\u8212\u514b",province:"\u897f\u85cf",city:"\u62c9\u8428",address:"\u5806\u9f99\u5fb7\u5e86\u533a"},{id:4,nickName:"\u8d1d\u5854",province:"\u4e0a\u6d77",city:"\u4e0a\u6d77",address:"\u6d66\u4e1c\u65b0\u533a\u79c0\u6cbf\u897f\u8def218\u5f04"}],_=[{id:1,nickName:"Schneewittchen",province:"Berlin",city:"Prenzlauer Berg",address:"Brandenburgische Stra\xdfe 9, Prenzlauer Berg, Berlin, Germany"},{id:2,nickName:"Cinderella",province:"Basse-Normandie",city:"Lisieux",address:"20 rue L\xe9on Dierx, Lisieux, Basse-Normandie, France"},{id:3,nickName:"Nuwa",province:"ShanXi",city:"Taiyuan",address:"Qian Feng Nan Lu 99hao, Taiyuan, ShanXi, China"},{id:4,nickName:"Pinocchio",province:"Palazzo Pignano",city:"Cremona",address:"Via Giovanni Amendola 134, Palazzo Pignano, Cremona, Italy"}],L=[{id:1,name:"zippo\u591c\u5149\u6d41\u6c99\u6253\u706b\u673a",price:268},{id:2,name:"\u6770\u767b(Jayden)\u5370\u5ea6\u5854\u5e03\u62c9\u9f13",price:9238},{id:3,name:"\u6d6a\u7434(Longines)\u673a\u68b0\u624b\u8868",price:13900},{id:4,name:"viney\u7537\u58eb\u76ae\u5e26",price:139},{id:5,name:"\u96c5\u8bd7\u5170\u9edb\u7ed2\u96fe\u54d1\u5149\u5507\u818f",price:310},{id:6,name:"CIRCUIT\u7537\u5b50\u6ed1\u96ea\u5355\u677f",price:2044},{id:7,name:"\u7279\u4ed1\u82cf\u8131\u8102\u725b\u5976",price:47},{id:8,name:"\u4e50\u9ad8\u79ef\u6728\u5e03\u52a0\u8fea",price:374},{id:9,name:"\u53cc\u559c\u71c3\u6c14\u7535\u78c1\u901a\u7528\u538b\u529b\u9505",price:137},{id:10,name:"\u61a8\u61a8\u5ba0\u732b\u722c\u67b6",price:238}],E=[{id:1,name:"Timeless Vitamin C Plus E 10 Percent Ferulic Acid Serum Serum Unisex 1 oz",price:14.69},{id:2,name:"Dockers Men's Tiller Boat Shoe",price:52.41},{id:3,name:"Paxcoo 124 Skeins Embroidery Floss Cross Stitch Thread with Needles",price:29.99},{id:4,name:"Michael Kors Crossbody",price:70.6},{id:5,name:"Crocs unisex-child Classic Graphic Clog",price:34.99},{id:6,name:"Timex Time Machines Digital 35mm Watch",price:28.95},{id:7,name:"Scalex Mite & Lice Spray for Birds, 8 oz.",price:14.75},{id:8,name:"Under Armour Men's Storm Liner",price:13.03},{id:9,name:"Nike Women's Pro 3\" Training Shorts",price:35.86},{id:10,name:"Olaplex No. 4 Bond Maintenance Shampoo",price:30}];function P(e){const n=e.items,s=new Map;for(let i=0;i<n.length;i++){const e=n[i];if("number"!=typeof e.quantity)e.quantity=1;else if(e.quantity<1){n.splice(i--,1);continue}if(void 0===e.productId)continue;const t=s.get(e.productId);void 0===t?s.set(e.productId,e):(t.quantity+=e.quantity,n.splice(i--,1))}}},64087:(e,n,s)=>{s.d(n,{M:()=>y});var i=s(44586),t=s(31729),a=s(48440),o=s(80421),r=s(57416),l=s(18441),c=s(68999),d=s(43581),h=s(63051),u=s(46831),j=s(28968),m=s(15993),x=s(13407),p=s(67512),g=s(96540),b=s(74848);const y=(0,g.memo)((()=>{const[e,n]=(0,g.useState)((()=>({name:"Learning GraphQL",edition:1,price:45,storeId:1,authorIds:[1,2]}))),s=(0,g.useCallback)((e=>{n((n=>({...n,name:e.target.value})))}),[]),y=(0,g.useCallback)((e=>{n((n=>({...n,edition:e.target.valueAsNumber})))}),[]),f=(0,g.useCallback)((e=>{n((n=>({...n,price:e.target.valueAsNumber})))}),[]),A=(0,g.useCallback)((e=>{let s;const i=e.target.value;s="string"==typeof i?parseInt(i):i,-1===s&&(s=void 0),n((e=>({...e,storeId:s})))}),[]),v=(0,g.useCallback)((e=>{let s=[];console.log(e.target.value);const i=e.target.value;s="string"==typeof i?i.split(",").map((e=>parseInt(e))):i,n((e=>({...e,authorIds:s})))}),[]),{i18n:k}=(0,i.A)(),w=(0,g.useMemo)((()=>"zh"==k.currentLocale||"zh_cn"==k.currentLocale||"zh_CN"==k.currentLocale),[k.currentLocale]),[I,B]=(0,g.useState)(!1),N=(0,g.useCallback)((()=>{B(!0)}),[]),S=(0,g.useCallback)((()=>{B(!1)}),[]);return(0,b.jsxs)(r.A,{elevation:3,style:{padding:"1.5rem",width:500},children:[(0,b.jsxs)(c.A,{spacing:2,children:[(0,b.jsx)("h1",{children:"Book Form"}),(0,b.jsx)(d.A,{label:"Name",value:e.name,onChange:s,error:""===e.name,helperText:""===e.name?"Name is required":""}),(0,b.jsx)(d.A,{label:"Edition",type:"number",value:e.edition,onChange:y}),(0,b.jsx)(d.A,{label:"Price",type:"number",value:e.price,onChange:f}),(0,b.jsxs)(t.A,{fullWidth:!0,children:[(0,b.jsx)(a.A,{id:"store-select-label",children:"Store"}),(0,b.jsxs)(l.A,{labelId:"store-select-label",label:"Authors",value:e.storeId,onChange:A,children:[(0,b.jsx)(o.A,{value:-1,children:"--NONE--"}),(0,b.jsx)(o.A,{value:1,children:"O'REILLY"}),(0,b.jsx)(o.A,{value:2,children:"MANNING"})]})]}),(0,b.jsxs)(t.A,{fullWidth:!0,children:[(0,b.jsx)(a.A,{id:"author-multi-select-label",children:"Authors"}),(0,b.jsxs)(l.A,{multiple:!0,labelId:"author-multi-select-label",label:"Authors",value:e.authorIds,onChange:v,children:[(0,b.jsx)(o.A,{value:1,children:"Eve Procello"}),(0,b.jsx)(o.A,{value:2,children:"Alex Banks"}),(0,b.jsx)(o.A,{value:3,children:"Dan Vanderkam"}),(0,b.jsx)(o.A,{value:4,children:"Boris Cherny"}),(0,b.jsx)(o.A,{value:5,children:"Samer Buna"})]})]}),(0,b.jsx)(t.A,{children:(0,b.jsx)(p.A,{onClick:N,variant:"contained",children:w?"\u63d0\u4ea4":"Submit"})})]}),(0,b.jsxs)(h.A,{open:I,onClose:S,children:[(0,b.jsx)(u.A,{children:w?"\u4fe1\u606f":"Info"}),(0,b.jsx)(j.A,{children:(0,b.jsx)(x.A,{children:w?"\u4ec5\u4f5c\u793a\u8303\uff0c\u65e0\u4efb\u4f55\u6548\u679c":"For demonstration only, without any effect"})}),(0,b.jsx)(m.A,{children:(0,b.jsx)(p.A,{onClick:S,children:"\u5173\u95ed"})})]})]})}))},66971:(e,n,s)=>{s.d(n,{a:()=>x});var i=s(96540),t=s(72774),a=s(63051),o=s(28968),r=s(48875),l=s(44676),c=s(47859),d=s(4671),h=s(99343),u=s(7324),j=s(39781),m=s(74848);const x=(0,i.memo)((e=>{let{open:n,fullScreen:s=!1,title:r,maxWidth:x="md",onClose:g,children:b}=e;const[y,f]=(0,i.useState)(s),A=(0,i.useCallback)((()=>{f((e=>!e))}),[]);return(0,m.jsxs)(a.A,{open:n,onClose:g,fullScreen:y,TransitionComponent:p,maxWidth:x,children:[(0,m.jsx)(t.A,{sx:{position:"relative"},children:(0,m.jsxs)(l.A,{children:[(0,m.jsx)(c.A,{sx:{ml:2,flex:1},variant:"h6",component:"div",children:r}),(0,m.jsx)(d.A,{onClick:A,style:{color:"white"},children:y?(0,m.jsx)(u.A,{}):(0,m.jsx)(h.A,{})}),(0,m.jsx)(d.A,{"aria-label":"close",onClick:g,style:{color:"white"},children:(0,m.jsx)(j.A,{})})]})}),(0,m.jsx)(o.A,{children:b})]})})),p=i.forwardRef((function(e,n){return(0,m.jsx)(r.A,{direction:"up",ref:n,...e})}))},74400:(e,n,s)=>{s.d(n,{l:()=>r});var i=s(96540),t=s(67512),a=s(66971),o=s(74848);const r=(0,i.memo)((e=>{let{buttonText:n,fullScreen:s=!1,title:r=n,variant:l="outlined",large:c=!1,maxWidth:d,useOriginalText:h=!0,children:u}=e;const[j,m]=(0,i.useState)(!1),x=(0,i.useCallback)((e=>{m(!0),e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}),[]),p=(0,i.useCallback)((()=>{m(!1)}),[]),g=h?{textTransform:"none"}:{};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.A,{"data-is-view-more-button":"true",onClick:x,variant:l,size:c?"large":"small",style:g,children:n}),(0,o.jsx)(a.a,{open:j,onClose:p,title:r,maxWidth:d,fullScreen:s,children:u})]})}))},16712:(e,n,s)=>{s.d(n,{o:()=>t});var i=s(44586);function t(){const{i18n:e}=(0,i.A)(),n=e.currentLocale;return"zh"===n||"zh_cn"===n||"zh_CN"==n}}}]);